# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-28 13:35
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('producto', '0004_auto_20170428_0018'),
    ]

    operations = [
        migrations.CreateModel(
            name='Talla',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(error_messages={'required': '\xbfCu\xe1l es el n\xfamero de talla?'}, max_length=2, unique=True, validators=[django.core.validators.RegexValidator(message='El n\xfamero de tall no es v\xe1lido', regex=b'^2[7-9]|3[0-9]|4[0-3]$')])),
            ],
            options={
                'db_table': 'tallas',
            },
        ),
        migrations.AlterField(
            model_name='detallefactura',
            name='cantidad',
            field=models.PositiveSmallIntegerField(error_messages={'required': '\xbfCuantos productos se van a comprar?'}, validators=[django.core.validators.RegexValidator(message='Ingrese solo n\xfameros.', regex=b'^[0-9]+$')]),
        ),
        migrations.AlterField(
            model_name='detallefactura',
            name='valor',
            field=models.PositiveIntegerField(error_messages={'required': '\xbfCu\xe1l es el valor del producto(s)?'}, validators=[django.core.validators.RegexValidator(message='Ingrese solo n\xfameros.', regex=b'^[0-9]+$')]),
        ),
        migrations.AlterField(
            model_name='factura',
            name='total_pagar',
            field=models.PositiveIntegerField(validators=[django.core.validators.RegexValidator(message='Ingrese solo n\xfameros.', regex=b'^[0-9]+$')]),
        ),
        migrations.AlterField(
            model_name='producto',
            name='estilo',
            field=models.CharField(choices=[('deportivo', 'Deportivo'), ('formal', 'Formal')], error_messages={'required': '\xbfCu\xe1l es el estilo?'}, max_length=9, validators=[django.core.validators.RegexValidator(message='El estilo no es v\xe1lido', regex=b'^deportivo|formal$')]),
        ),
        migrations.AlterField(
            model_name='producto',
            name='nombre',
            field=models.CharField(error_messages={'required': '\xbfCu\xe1l es el nombre del producto?s'}, max_length=40, validators=[django.core.validators.RegexValidator(message='Ingrese solo caracteres alfanumericos', regex=b'^[A-Za-z0-9\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='producto',
            name='precio',
            field=models.PositiveIntegerField(error_messages={'required': 'Cu\xe1l es el precio del producto?'}, validators=[django.core.validators.RegexValidator(message='Ingrese solo n\xfameros.', regex=b'^[0-9]+$')]),
        ),
        migrations.AlterField(
            model_name='producto',
            name='stock',
            field=models.PositiveSmallIntegerField(error_messages={'required': '\xbfCuantos hay en el inventario?'}, validators=[django.core.validators.RegexValidator(message='Ingrese solo n\xfameros.', regex=b'^[0-9]+$')]),
        ),
        migrations.RemoveField(
            model_name='producto',
            name='talla',
        ),
        migrations.AddField(
            model_name='producto',
            name='talla',
            field=models.ManyToManyField(db_table='tallas_producto', related_name='talla_producto', to='producto.Talla'),
        ),
    ]
